<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:my="*"
			   minWidth="300" minHeight="100" initialize="application_initialize(event)">

	<fx:Script>
		<![CDATA[
			use namespace mx_internal;
			
			import flash.system.*;
			
			import mx.controls.*;
			import mx.core.mx_internal;
			import mx.events.*;
			import mx.managers.*;
			
			
			private var core:LocachaCore = new LocachaCore(this);
			
			private var camera:Camera = null;

			private var userCams:Object = new Object();
			
			
			
			protected function application_initialize(event:FlexEvent):void
			{
				
			}
			
			protected function connectLink_click(event:MouseEvent):void
			{
				connectLink.label = "connecting...";
				core.connect();
			}
			
			public function core_connected():void {
				connectLink.label = "connected";	
				
				core.updateVideo(camera);
			}
			
			public function core_disconnected():void {
				connectLink.label = "disconnected";	
			}
			
			protected function copyIdLink_click(event:MouseEvent):void
			{
				var nearID:String = core.netConnection.nearID;
				System.setClipboard(nearID);
				Alert.show("copied: " + nearID);
			}

			protected function sendVideoCheckbox_change(event:Event):void
			{
				if(sendVideoCheckbox.selected)
				{
					camera = Camera.getCamera();
					
					if(camera)
					{
						camera.setMode(160, 120, 15);
						localVideoDisplay.attachCamera(camera);
					}
					else
						Alert.show("no camera found :(");
					
					core.updateVideo(camera);
				}
				else
				{
					camera = null;
					localVideoDisplay.attachCamera(null);
					//localVideoDisplay.videoPlayer.clear();
					
					core.updateVideo(null);
				}
			}
			
			protected function addPeerLink_click(event:Event):void
			{
				var popup:TextInputDialog = PopUpManager.createPopUp(this, TextInputDialog, true) as TextInputDialog;
				
				popup.setup("Add Peer", "Remote peer id:", addRemotePeer);

				PopUpManager.centerPopUp(popup);
			}
			
			protected function delPeerLink_click(event:Event):void
			{
				
			
			}
			
			private function addRemotePeer(farID:String):void
			{
				core.addUser(farID);
			}
			
			public function user_update(user:LocachaUser):void
			{
				// if user has a display box, update the stream
				if(userCams[user.farID] && !user.videoStream)
				{
					mainLayout.removeElement(userCams[user.farID]);
					
					delete userCams[user.farID];	
				}
				// no video box
				else if(user.videoStream)
				{
					// good handle add
					var display:VideoDisplay = new VideoDisplay();
					
					mainLayout.addElement(display);
					
					var video:Video = new Video();
					video.width = 160;
					video.height = 120;
					video.attachNetStream(user.videoStream);
					display.addChild(video);
					
					userCams[user.farID] = display;
				}
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Group id="mainLayout" width="100%" height="100%">
		<s:layout>
			<my:FlowLayout/>
		</s:layout>
		<mx:VBox>
			<mx:LinkButton id="connectLink" label="connect" click="connectLink_click(event)" />
			<mx:CheckBox id="sendVideoCheckbox" label="send video" change="sendVideoCheckbox_change(event)"/>
			<mx:LinkButton label="copy my ID" click="copyIdLink_click(event)" />
			<mx:LinkButton label="add peer" click="addPeerLink_click(event)" />
			<mx:LinkButton label="del peer" click="delPeerLink_click(event)" />
		</mx:VBox>
		
		<mx:VideoDisplay id="localVideoDisplay" width="160" height="120"  />
	</s:Group>
</s:Application>
