<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:my="*"
			   height = "150" width="100%"
			   minWidth="300" minHeight="100" initialize="application_initialize(event)" backgroundColor="#293134">

	<fx:Script>
		<![CDATA[
			import org.osmf.events.TimeEvent;
			use namespace mx_internal;
			
			import flash.system.*;
			
			import mx.controls.*;
			import mx.core.mx_internal;
			import mx.events.*;
			import mx.managers.*;

			
			private var core:LocachaCore;
			
			private var camera:Camera = null;
			private var localDisplay:UserDisplay;
			private var startVideoButton:Button;
			
			private var userCams:Object = new Object();
			
			
			protected function application_initialize(event:FlexEvent):void
			{
				core = new LocachaCore(this);
				
				core.connect();
				
				showStartVideoButton();
				
				if (ExternalInterface.available)
					ExternalInterface.addCallback("getRightHeight", getRightHeight);  
			}
			
			public function getRightHeight():Number
			{
				var rightHeight:Number = 40;
				
				if(mainLayout.visible)
					rightHeight += (mainLayout.layout as FlowLayout).internalHeight;
		
				return rightHeight;
			}

			public function user_update(user:LocachaUser):void
			{
				// if user has a display box, update the stream
				if(userCams[user.userID] && !user.videoStream)
				{
					mainLayout.removeElement(userCams[user.userID]);
					
					delete userCams[user.userID];	
				}
				// no video box
				else if(!userCams[user.userID] && user.videoStream)
				{
					// good handle add
					var display:UserDisplay = new UserDisplay();
					
					mainLayout.addElement(display);
					
					var video:Video = new Video();
					video.width = 160;
					video.height = 120;
					video.attachNetStream(user.videoStream);
					display.video.addChild(video);

					display.addEventListener(MouseEvent.CLICK, userDisplay_click);
					
					userCams[user.userID] = display;
				}
			}
			
			protected function toggleVideoChat_click(event:Event):void
			{
				if(!core.netConnection)
				{
					core.connect();
					mainLayout.visible = true;
					toggleVideoChat.label = "turn video chat off";
				}
				else
				{
					stopLocalVideo();
					core.dispose();
					mainLayout.visible = false;
					toggleVideoChat.label = "turn video chat on";
				}
			}

			private function showStartVideoButton():void
			{
				startVideoButton = new Button();
				startVideoButton.label="start my video";
				startVideoButton.labelPlacement = "center";
				startVideoButton.width = 160;
				startVideoButton.height = 120;
				startVideoButton.addEventListener(MouseEvent.CLICK, startVideoButton_click);
				
				mainLayout.addElementAt(startVideoButton, 0);
			}
			
			protected function stopLocalVideo():void
			{
				if(!localDisplay)
					return;
				
				camera = null;
				localDisplay.video.attachCamera(null);
				
				mainLayout.removeElement(localDisplay);
				mainLayout.addElementAt(startVideoButton, 0);
				
				core.updateVideo(null);
			
			}
			
			protected function startVideoButton_click(event:Event):void
			{
				camera = Camera.getCamera();
				
				if(camera)
				{
					camera.setMode(160, 120, 15);
					
					localDisplay = new UserDisplay();
					localDisplay.addEventListener(MouseEvent.CLICK, userDisplay_click);

					mainLayout.removeElement(startVideoButton);
					mainLayout.addElementAt(localDisplay, 0);

					localDisplay.video.attachCamera(camera);
				}
				else
					Alert.show("no camera found :(");
				
				core.updateVideo(camera);
			}

			private function userDisplay_click(event:Event) : void
			{
				if (!ExternalInterface.available)
					return;
				
				if(event.target == localDisplay)
					ExternalInterface.call("flash_selectedUser", core.localUserID);
				else
				{
					for (var userID:String in userCams)
						if(userCams[userID] == event.target)
						{
							ExternalInterface.call("flash_selectedUser", userID);
							break;
						}
				}
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<mx:VBox width="100%" backgroundAlpha="0">
		<mx:LinkButton id="toggleVideoChat" label="turn off video chat" click="toggleVideoChat_click(event)" />
		
		<s:Group id="mainLayout" width="100%" height="100%" contentBackgroundAlpha="0">
			<s:layout>
				<my:FlowLayout/>
			</s:layout>
			<mx:Button width="160" height="120" label="hello" />
			<mx:Button width="160" height="120" label="start" />
			<mx:Button width="160" height="120" label="test" />
		</s:Group>
	
	</mx:VBox>
	
	<s:Group id="optionsPanel" width="160" height="120" visible="false" contentBackgroundAlpha="0">
		<mx:LinkButton label="hello" />
	</s:Group>

</s:Application>
